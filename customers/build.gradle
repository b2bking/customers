buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'

group = 'com.bmatyganov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-parent:2.0.5.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
	compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.2.2')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.webjars:bootstrap:3.3.7')
    compile('org.webjars:jquery:3.3.1')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.webjars:webjars-locator:0.32')
	runtimeOnly('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

checkstyle {
	toolVersion '7.8.1'
	configFile file("buildconf/checkstyle.xml")
}
checkstyleMain {
	source ='src/main/java'
}
checkstyleTest {
	source ='src/test/java'
}

tasks.withType(Checkstyle) {
    include '**/*.java'
    exclude '**/CustomersApplication.java'
}

apply plugin: 'findbugs'
findbugs {
    ignoreFailures = false
    toolVersion = "3.0.1"
    sourceSets=[sourceSets.main]
    excludeFilter = file("buildconf/excludeFilter.xml")
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}
